import Head from "next/head";
import { useState, useEffect, SetStateAction } from "react";
import VipArea from "../components/VipArea";
import axios from "axios";

export default function Home() {
  const [randomPick, setRandomPick] = useState<string>(
    "Clicca qui sotto per iniziare!"
  );
  const [list, setList] = useState([{ id: 1, title: "si comincia!" }]);
  const [newComment, setNewComment] = useState("");
  const [notify, setNotify] = useState(false);
  const [journeyArea, setJourneyArea] = useState(true);
  const [vipArea, setVipArea] = useState(false);
  const [randomId, setRandomId] = useState("");

  //const dummyList = ["first", "second", "three", "four", "five"];

  async function getListData() {
    const response = await axios.get(
      "https://mybase-72f82-default-rtdb.europe-west1.firebasedatabase.app//comments.json"
    );
    const data = response.data;
    const newList = [];

    for (const key in data) {
      const listItem = {
        id: key,
        title: data[key].title,
      };

      newList.push(listItem);
    }

    //@ts-ignore
    setList(newList);
  }

  useEffect(() => {
    getListData();
  }, []);

  function randomChoice(someList: { title: string; id: string }[]) {
    const randomNumber = Math.random() * someList.length;
    let pickObj = { choice: "", id: "" };

    for (let i = 0; i < randomNumber; i++) {
      pickObj.choice = someList[i].title;
      pickObj.id = someList[i].id;
    }
    console.log(pickObj.id);
    return pickObj;
  }

  async function handleSubmit() {
    try {
      if (newComment.toLowerCase() === "vip area") {
        setJourneyArea(false);
        setVipArea(true);
        return;
      }
      if (newComment !== "" && newComment !== "vip area") {
        axios.post(
          "https://mybase-72f82-default-rtdb.europe-west1.firebasedatabase.app//comments.json",
          { title: newComment }
        );

        setNotify(true);
        setTimeout(() => setNotify(false), 2000);
      }
    } catch (e) {
      console.log(e);
    }
    setNewComment("");
  }

  async function deleteItem(id: string) {
    try {
      if (list.length > 1) {
        axios.delete(
          `https://mybase-72f82-default-rtdb.europe-west1.firebasedatabase.app//comments/${id}.json`
        );

        setRandomPick(
          "your item was deleted! click on the button below for new challenges"
        );
      }
    } catch (e) {
      console.log(e);
    }
  }

  function addItemHandler() {
    handleSubmit();
  }

  return (
    <>
      <Head>
        <title>Emerald Journey</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/pokeball.ico" />
      </Head>
      {journeyArea && (
        <div className="box">
          <div className="top-part">
            <h1>Emerald Journey</h1>
            <div className="random-pick">{randomPick}</div>
            <div className="btnContainer">
              <button
                className="button"
                onClick={() => {
                  getListData();
                  //@ts-ignore
                  let choice = randomChoice(list) || "";
                  setRandomPick("rullo di tamburi...");
                  setTimeout(() => {
                    setRandomPick(choice.choice);
                    setRandomId(choice.id);
                  }, 3000);
                }}
              >
                Let&apos;s begin!
              </button>
              <button
                className="button delete"
                onClick={() => {
                  deleteItem(randomId);
                  getListData();
                }}
              >
                Delete
              </button>
            </div>
          </div>
          <div className="input-container">
            <textarea
              placeholder="Write a new comment here..."
              className="input"
              rows={6}
              onChange={(e) => {
                e.preventDefault();
                setNewComment(e.target.value);
              }}
              value={newComment}
            />
            <button className="submit-button" onClick={() => addItemHandler()}>
              Submit
            </button>
            {notify && <div className="notify">Sent Succesfully!</div>}
          </div>
        </div>
      )}
      {vipArea && <VipArea />}
    </>
  );
}
